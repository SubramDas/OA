A valid domino arrangement is given which is represented using two strings in the array domino. All dominoes are unique (of size 1x2 or 2x1) and each domino is represented by an English character (lowercase or uppercase).   
Each domino can be colored using any one of the colors Red, Green, or Blue (RGB). Find the number of distinct ways to color the dominoes such that no two adjacent dominoes have the same color. Since the answer can be large, return the answer modulo (10^9 + 7).   

#include <bits/stdc++.h>
using namespace std;

int mod = 1000000007;
int main() {
    int n;
    cin>>n;
	string s1, s2;
	cin>>s1>>s2;
	int prev; // 0 -> vertical, 1 -> horizontal
	int i = 0;
	long long ans;
	
	if(s1[0] == s2[0]){
	    prev = 0;
	    ans = 3;
	    i = 1;
	} else {
	    prev = 1;
	    ans = 6;
	    i = 2;
	}
	
    for(i ; i<n ;){
        
	    if(s1[i] == s2[i]){ // v
	        if(prev == 0)
	            ans = (ans*2)%mod;
	        prev = 0;
	        i += 1;
	    } 
	    else{ 
	        if(prev == 0)
	            ans = (ans*2)%mod;
	        else 
	           ans = (ans*3)%mod;
	        
	        prev = 1;
	        i += 2;
	    }
	}
	
	cout<<ans;
	return 0;
}
